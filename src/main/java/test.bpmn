<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://www.activiti.org/test">
  <collaboration id="Collaboration">
    <participant id="pool1" name="Test Dropdown Selection" processRef="testDropdown"></participant>
  </collaboration>
  <process id="testDropdown" name="Test Dropdown Workflow" isExecutable="true">
    <documentation>TTTTT   This process can be used to propose new business terms. The term will be created using the entered characteristics and placed in the "Data Governance Council" community.</documentation>
    <laneSet id="laneSet_testDropdown">
      <lane id="lane1">
        <flowNodeRef>endevent1</flowNodeRef>
        <flowNodeRef>startevent1</flowNodeRef>
        <flowNodeRef>userForm</flowNodeRef>
        <flowNodeRef>boundarytimer1</flowNodeRef>
        <flowNodeRef>setTimeList</flowNodeRef>
        <flowNodeRef>setNextTime</flowNodeRef>
        <flowNodeRef>sendEmail</flowNodeRef>
      </lane>
    </laneSet>
    <endEvent id="endevent1" name="End"></endEvent>
    <startEvent id="startevent1" name="testDropdownStart" activiti:initiator="startUser">
      <extensionElements>
        <activiti:formProperty id="dateInputs" name="Notification Dates (mm/dd)" type="string" default="1/21,1/22,1/23"></activiti:formProperty>
      </extensionElements>
    </startEvent>
    <scriptTask id="setTimeList" name="set time list" activiti:async="true" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import com.collibra.dgc.core.exceptions.DGCException
import java.text.DateFormat
import java.text.SimpleDateFormat

loggerComponent.info("[[ LOGGING ]] - ********SET DATE TIME LIST SCRIPT BEGIN******");
loggerComponent.info("[[ LOGGING ]] - ==========DATE INPUTS==========" + dateInputs);

int year = Calendar.getInstance().get(Calendar.YEAR)

/*Obtain and sort the provided dates (MM/dd)entered on start form*/
List&lt;Date&gt; notificationDateList	= []
List&lt;String&gt; notificationDatStringList = utility.toList(dateInputs)
notificationDatStringList.sort()

notificationDatStringList.each {date -&gt;
	try{
		validDate = new SimpleDateFormat('MM/dd/yyyy').parse(date.concat('/').concat(year.toString()))
		notificationDateList.add(validDate)
	}catch(java.text.ParseException e){
		dgcError = new DGCException("${date} - Dates must be in MM/DD format")
		dgcError.setTitleCode ("Unparseable Date")
		throw dgcError
	}
}
execution.setVariable('notificationDateList', notificationDateList);
loggerComponent.info("[[ LOGGING ]] - ==========NOTIFICATION DATA LIST==========" + notificationDateList);
loggerComponent.info("[[ LOGGING ]] - ********SET DATE TIME LIST SCRIPT END******");</script>
    </scriptTask>
    <userTask id="userForm" name="user form" activiti:candidateUsers="user(${startUser})">
      <extensionElements>
        <activiti:formProperty id="cancel" name="Cancel Task" type="button" default="false"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <scriptTask id="setNextTime" name="set next time" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import java.text.DateFormat
import java.text.SimpleDateFormat
import groovy.time.TimeCategory

loggerComponent.info("[[ LOGGING ]] - ********SET NEXT NOTIFICATION DATE SCRIPT BEGIN******");

// task terminate flag, set to true to end task if no more notifiy date in notification date list
def taskTerminate = false

Date currentDate =  new Date();

def getISO8601Date = { Date date-&gt;
		TimeZone tz = TimeZone.getTimeZone("UTC")
		DateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")
		df.setTimeZone(tz)
		String nowAsISO = df.format(date)
		nowAsISO
	}

def getNextNotificationDate ={List&lt;Date&gt; notificationDateList-&gt;
		Date nextNotifcationDate
		/*Loop through the notification Date List, and find the next one*/
		loggerComponent.info("[[ LOGGING ]] - ==========notificationDateList=========="+notificationDateList);
		for (notifcationDate in notificationDateList){
			if(currentDate &lt; notifcationDate){
				nextNotifcationDate = notifcationDate
				break;
			}
		}
		/*If this year does not include any more recertification dates, set nextNotifcationDate to current date and terminate to true */
		if(nextNotifcationDate == null){
			nextNotifcationDate = currentDate
			taskTerminate = true
		}	
		nextNotifcationDate
	}
def testNotificationDate = getNextNotificationDate(notificationDateList);
loggerComponent.info("[[ LOGGING ]] - ==========testNotificationDate=========="+testNotificationDate);

use( TimeCategory ) {
    currentDate = currentDate+ 1.minutes
}

String nextNotificationDate = getISO8601Date(currentDate);
loggerComponent.info("[[ LOGGING ]] - ==========nextCertificationDate=========="+nextNotificationDate);
execution.setVariable('nextCertificationDate', nextNotificationDate);
execution.setVariable('taskTerminate', taskTerminate);
loggerComponent.info("[[ LOGGING ]] - ********SET NEXT NOTIFICATION DATE SCRIPT END******");
</script>
    </scriptTask>
    <sequenceFlow id="flow1" sourceRef="startevent1" targetRef="setTimeList"></sequenceFlow>
    <sequenceFlow id="flow2" sourceRef="setTimeList" targetRef="setNextTime"></sequenceFlow>
    <sequenceFlow id="flow3" sourceRef="setNextTime" targetRef="userForm"></sequenceFlow>
    <sequenceFlow id="flow4" sourceRef="userForm" targetRef="endevent1"></sequenceFlow>
    <scriptTask id="sendEmail" name="send e-mail" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>loggerComponent.info("[[ LOGGING ]] - ********SEND E MAIL******");
loggerComponent.info("[[ LOGGING ]] - ********taskTerminate******"+taskTerminate);
loggerComponent.info("[[ LOGGING ]] - ********nextCertificationDate******"+nextCertificationDate);</script>
    </scriptTask>
    <boundaryEvent id="boundarytimer1" name="Timer" attachedToRef="userForm" cancelActivity="true">
      <timerEventDefinition>
        <timeDate>${nextNotificationDate}</timeDate>
      </timerEventDefinition>
    </boundaryEvent>
    <sequenceFlow id="flow5" sourceRef="boundarytimer1" targetRef="sendEmail"></sequenceFlow>
    <sequenceFlow id="flow6" sourceRef="sendEmail" targetRef="setNextTime"></sequenceFlow>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_Collaboration">
    <bpmndi:BPMNPlane bpmnElement="Collaboration" id="BPMNPlane_Collaboration">
      <bpmndi:BPMNShape bpmnElement="pool1" id="BPMNShape_pool1">
        <omgdc:Bounds height="281.0" width="891.0" x="80.0" y="40.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="lane1" id="BPMNShape_lane1">
        <omgdc:Bounds height="281.0" width="871.0" x="100.0" y="40.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent1" id="BPMNShape_endevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="910.0" y="160.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="startevent1" id="BPMNShape_startevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="150.0" y="160.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="setTimeList" id="BPMNShape_setTimeList">
        <omgdc:Bounds height="55.0" width="105.0" x="270.0" y="150.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="userForm" id="BPMNShape_userForm">
        <omgdc:Bounds height="55.0" width="105.0" x="730.0" y="150.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="boundarytimer1" id="BPMNShape_boundarytimer1">
        <omgdc:Bounds height="30.0" width="30.0" x="770.0" y="190.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="setNextTime" id="BPMNShape_setNextTime">
        <omgdc:Bounds height="55.0" width="105.0" x="500.0" y="150.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sendEmail" id="BPMNShape_sendEmail">
        <omgdc:Bounds height="55.0" width="105.0" x="620.0" y="250.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="flow1" id="BPMNEdge_flow1">
        <omgdi:waypoint x="185.0" y="177.0"></omgdi:waypoint>
        <omgdi:waypoint x="270.0" y="177.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow2" id="BPMNEdge_flow2">
        <omgdi:waypoint x="375.0" y="177.0"></omgdi:waypoint>
        <omgdi:waypoint x="500.0" y="177.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow3" id="BPMNEdge_flow3">
        <omgdi:waypoint x="605.0" y="177.0"></omgdi:waypoint>
        <omgdi:waypoint x="730.0" y="177.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow4" id="BPMNEdge_flow4">
        <omgdi:waypoint x="835.0" y="177.0"></omgdi:waypoint>
        <omgdi:waypoint x="910.0" y="177.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow5" id="BPMNEdge_flow5">
        <omgdi:waypoint x="785.0" y="220.0"></omgdi:waypoint>
        <omgdi:waypoint x="784.0" y="277.0"></omgdi:waypoint>
        <omgdi:waypoint x="725.0" y="277.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow6" id="BPMNEdge_flow6">
        <omgdi:waypoint x="620.0" y="277.0"></omgdi:waypoint>
        <omgdi:waypoint x="552.0" y="277.0"></omgdi:waypoint>
        <omgdi:waypoint x="552.0" y="205.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>